// Hints use letters instead of numbers
hint_digits="abcdefghijklmnopqrstuvwxyz";

// Open Link in new buffer by using d
define_key(content_buffer_normal_keymap, "d", "follow-new-buffer");

// Hints have white background
hint_background_color="white";

// Larger Hints
register_user_stylesheet(
    "data:text/css," +
        escape(
            "@namespace url(\"http://www.w3.org/1999/xhtml\");\n" +
            "span.__conkeror_hint {\n"+
            "  font-size: 18px !important;\n"+
            "  line-height: 18px !important;\n"+
            "}"));

// Key kill mode - prevent sites from grabbing key bindings
require("key-kill");
key_kill_input_fields = true;
key_kill_mode.test.push(/\/\/.*\//); //regex matches all sites

// Change default download folder by changing working directory
cwd = get_home_directory();
cwd.append("Downloads");

// History Completion
url_completion_use_history = true;

// History browsing
define_browser_object_class(
    "history-url", null, 
    function (I, prompt) {
        check_buffer (I.buffer, content_buffer);
        var result = yield I.buffer.window.minibuffer.read_url(
            $prompt = prompt,  $use_webjumps = false, $use_history = true, $use_bookmarks = false);
        yield co_return (result);
    });

interactive("find-url-from-history",
            "Find a page from history in the current buffer",
            "find-url",
            $browser_object = browser_object_history_url);

interactive("find-url-from-history-new-buffer",
            "Find a page from history in the current buffer",
            "find-url-new-buffer",
            $browser_object = browser_object_history_url);

define_key(content_buffer_normal_keymap, "h", "find-url-from-history-new-buffer");
define_key(content_buffer_normal_keymap, "H", "find-url-from-history");

function my_title_format (window) {
    return '{'+get_current_profile()+'} '+window.buffers.current.description;
}

title_format_fn = my_title_format;

// disable scrollbars
function disable_scrollbars (buffer) {
    buffer.top_frame.scrollbars.visible = false;
}
add_hook("create_buffer_late_hook", disable_scrollbars);

var old_isearch_start = (old_isearch_start || isearch_start);
isearch_start = function (window, direction) {
    window.buffers.current.browser.contentWindow.scrollbars.visible = true;
    old_isearch_start(window, direction);
};

var old_isearch_session_destroy = (old_isearch_session_destroy ||
                                   isearch_session.prototype.destroy);
isearch_session.prototype.destroy = function () {
    this.minibuffer.window.buffers.current.browser.contentWindow.scrollbars.visible = false;
    old_isearch_session_destroy.call(this);
};